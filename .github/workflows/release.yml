name: release-all CI/CD

on:
  repository_dispatch:
  workflow_dispatch:
 # schedule:
 #   - cron: 0 16 4,9,14,19,24,28,31 * *

jobs:
  build-linux-x86_64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: install dependencies
      run: |
        uname -a
        sudo apt update
        sudo apt install --yes libpcap-dev
        cd ui && npm install
    - name: build
      run: |
        make build-ui build-go
        cd bundles && tar -zcvf --remove-files openbytes-linux-x86_64.tar.gz openbytes
    - uses: actions/upload-artifact@v4
      with:
        name: artifact1
        path: bundles

  build-linux-arm64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: uraimo/run-on-arch-action@v2
      name: build-arm64
      id: runcmd
      with:
        arch: aarch64
        distro: ubuntu22.04
        githubToken: ${{ github.token }}
        setup: |
          mkdir -p "${PWD}/bundles"
        dockerRunArgs: |
          --volume "${PWD}/bundles:/bundles"
          --volume "${GITHUB_WORKSPACE}:/source_code"
        run: |
          uname -a
          apt update
          apt install --yes npm libpcap-dev wget git build-essential pkgconf libelf-dev llvm-12 clang-12  linux-tools-generic linux-tools-common
          wget https://go.dev/dl/go1.21.6.linux-arm64.tar.gz
          rm -rf /usr/local/go
          tar -C /usr/local -xzf go1.21.6.linux-arm64.tar.gz
          export PATH=/usr/local/go/bin:$PATH:/usr/local/bin
          echo $PATH
          cd ui && npm install && npm run build
          pwd && cd ../
          rm -rf cmd/dist && cp -rf ui/dist cmd/ && rm -rf cmd/dist/js/*.map
          go build -o bundles/openbytes-linux-arm64 *.go
    - uses: actions/upload-artifact@v4
      with:
        name: artifact2
        path: bundles

  build-macos-x86_64:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: install dependencies
      run: |
        uname -a
    - name: build
      run: |
        cd ui && npm install && npm run build
        pwd && cd ../
        rm -rf cmd/dist && cp -rf ui/dist cmd/ && rm -rf cmd/dist/js/*.map
        go build -o bundles/openbytes-darwin-x86_64 *.go
    - uses: actions/upload-artifact@v4
      with:
        name: artifact3
        path: bundles

  build-macos-arm64:
    runs-on: flyci-macos-large-latest-m1
    steps:
    - uses: actions/checkout@v4
    - name: install dependencies
      run: |
        uname -a
        wget https://go.dev/dl/go1.21.6.darwin-arm64.tar.gz
        sudo rm -rf /usr/local/go
        sudo tar -C /usr/local -xzf go1.21.6.darwin-arm64.tar.gz
    - name: build
      run: |
        cd ui && npm install && npm run build
        pwd && cd ../
        rm -rf cmd/dist && cp -rf ui/dist cmd/ && rm -rf cmd/dist/js/*.map
        export PATH=/usr/local/go/bin:$PATH:/usr/local/bin
        echo $PATH
        go build -o bundles/openbytes-darwin-arm64 *.go
    - uses: actions/upload-artifact@v4
      with:
        name: artifact4
        path: bundles

  release:
    needs: [build-linux-x86_64, build-linux-arm64, build-macos-x86_64, build-macos-arm64]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        path: bundles
    - name: version
      run: |
          echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
    - name: release
      uses: ncipollo/release-action@v1
      with:
        name: openbytes${{ env.FILE_DATE }}
        tag: ${{ env.FILE_DATE }}
        artifacts: "bundles/**/*"
        token: ${{ secrets.GITHUB_TOKEN }}