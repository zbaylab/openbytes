name: Makefile CI/CD

on:
  repository_dispatch:
  workflow_dispatch:
 # schedule:
 #   - cron: 0 16 4,9,14,19,24,28,31 * *

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux]
        goarch: [amd64,arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        uname -a
        sudo apt install libpcap-dev 
        cd ui && npm install && npm run build

    - name: Run configure
      run: echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    # - uses: wangyoucao577/go-release-action@v1
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     goos: ${{ matrix.goos }}
    #     goarch: ${{ matrix.goarch }}
    #     binary_name: "test-binary"
    #     pre_command: ""
    #     build_command: "make build-go"

    - uses: uraimo/run-on-arch-action@v2
      name: Run commands
      id: runcmd
      with:
        arch: aarch64
        distro: ubuntu22.04
        # Not required, but speeds up builds by storing container images in
        # a GitHub package registry.
        githubToken: ${{ github.token }}

        # Set an output parameter `uname` for use in subsequent steps
        install: |
          uname -a
          apt update
          apt install --yes npm libpcap-dev wget git build-essential pkgconf libelf-dev llvm-12 clang-12  linux-tools-generic linux-tools-common
          wget https://go.dev/dl/go1.21.0.linux-arm64.tar.gz
          rm -rf /usr/local/go
          tar -C /usr/local -xzf go1.21.0.linux-arm64.tar.gz

        run: |
          export PATH=/usr/local/go/bin:$PATH:/usr/local/bin
          echo $PATH
          cd ui && npm install && npm run build
          pwd && cd ../ && make build-go

    # - name: Run build
    #   run: |
    #     rm -rf cmd/dist && cp -rf ui/dist cmd/ && rm -rf cmd/dist/js/*.map
    #     go build -o bundles/openbytes-${{ matrix.goos }}-${{ matrix.goarch }} *.go

    # - name: Create Release
    #   uses: ncipollo/release-action@v1
    #   with:
    #     name: openbytes-${{ matrix.goarch }}
    #     tag: ${{ matrix.goarch }}${{ env.FILE_DATE }}
    #     artifacts: "bundles/*"
    #     token: ${{ secrets.GITHUB_TOKEN }}