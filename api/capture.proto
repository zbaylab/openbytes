syntax = "proto3";

package openbytes;

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";

option go_package="api/go;openbytes";

service Captures {
  rpc Device(google.protobuf.Empty) returns (google.protobuf.ListValue) {}
  rpc List(Capture) returns (stream Packet) {}
  rpc Traffic(Capture) returns (stream Point) {}
  rpc Copy(CopyRequest) returns (google.protobuf.StringValue) {}
}

message Capture {
  string iface = 1;
  string filter = 2;
}

message Packet {
  // string type = 1;
  string protocol = 2;
  Address src = 3;
  Address dst = 4;
  string layers = 5;
  bytes payload = 6;
  string data = 7;
}

message Address {
  string ip = 1;
  int32 port = 2;
  string mac = 3;
}

message Point {
  string label = 1;
  int32 tcp_count = 2;
  int32 udp_count = 3;
  int32 other_count = 4;
}

message CopyRequest {
  string iface = 1;
  string port = 2;
  repeated Destination destinations = 3;
  message Destination {
    string ip = 1;
    string port = 2;
  }
}